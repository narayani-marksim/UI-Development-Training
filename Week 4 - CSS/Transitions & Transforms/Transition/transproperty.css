.square {
    width: 100px;
    height: 100px;
    border-radius: 8px;
    background-color: violet;
    transition-duration: 600ms;
    transition-timing-function: ease;
    padding: 8px;
  }
  
  .square.tp-transform {
    transition-property: transform;
  }
  
  .square.tp-color {
    transition-property: background-color;
  }
  
  .square.tp-both {
    transition-property: background-color, transform;
  
    /* 
    You can also use the keyword `all`, e.g.:
    
    transition-property: all;
    */
  }
  
  .square.tp-none {
    transition-property: none;
  }
  
  .square:is(:hover, :focus) {
    transform: scale(1.3);
    background-color: cornflowerblue;
  }
  
  .wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 32px;
  }
  
  .wrapper .square:nth-child(odd) {
    justify-self: end;
  }
  
  .wrapper .square:nth-child(even) {
    justify-self: start;
  }
  
  /* Decorative styles */
  body {
    display: grid;
    place-items: center;
  }
  